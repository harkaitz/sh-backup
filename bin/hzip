#!/bin/sh
##:
#h: Usage: hzip [-v][-p PASSWORD][-f tar.gz|tar.zip|zip][-o FILE] FILES...
#h:
#h: Create zips for data or tars for system files. If the environment variable
#h: HZIP_PASSWORD is set, then the generated zip files will be encrypted.
#h:
#h: If an output is specified in will add to it all the specified archives. If
#h: not tt creates an archive for each specified argument.
##:
hzip() {
    local format= output=
    ## Parse command line.
    local OPTIND optopt= ops=
    while getopts "vp:f:o:" optopt; do
        case $optopt in
            v)  local VERBOSE="y";;
            p)  local HZIP_PASSWORD="${OPTARG}";;
            f)  local format="${OPTARG}"  ;;
            o)  local output="${OPTARG}"  ;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    
    ## Check arguments.
    if test ! -n "$1"; then
        return 0
    elif test ! -n "${format}" && test ! -n "${output}"; then
        echo "hzip: error: You need to specify at least an output or a format." >&2
        return 1
    elif test   -n "${format}" && test ! -n "${output}"; then
        true
    elif test ! -n "${format}" && test   -n "${output}"; then
        local format="`basename "${output}" | sed -n 's|^.*\.tar|tar|p'`"
        local format="${format:-`basename "${output}" | sed 's|^.*\.||'`}"
    fi
    
    ## Compress each file separatelly.
    if test -n "${output}"; then
        hzip_compress "${format}" "${output}" "$@"
    else
        for arg in "$@"; do
            hzip_compress "${format}" "${arg}.${format}" "${arg}"
        done
    fi
}
hzip_compress() { # FORMAT OUTPUT PASSWORD FILES...
    local format="${1}" output="${2}" 
    shift 2
    local tar="`echo "${output}" | sed 's|\.tar\..*|\.tar|'`"
    mkdir -p "`dirname "${output}"`"
    if test -n "${HZIP_PASSWORD}"; then
        case "${format}" in
            *tar)     hzip_run tar cf "${output}" "$@";;
            *tar.gz)  hzip_run tar cfz "${output}" "$@";;
            *tar.zip) hzip_run tar cf  "${tar}" "$@"
                      rm -vf "${output}"
                      hzip_run 7z u -p"${HZIP_PASSWORD}" -snl "${output}" "$tar"
                      rm -vf "${tar}";;
            *)        if ! which 7z >/dev/null 2>&1;then
                          echo "error: Please install 7z." >&2
                          return 1
                      fi
                      rm -vf "${output}"
                      hzip_run 7z u -p"${HZIP_PASSWORD}" -snl "${output}" "$@";;
        esac
    else
        case "${format}" in
            *tar)     hzip_run tar cf "${output}" "$@";;
            *tar.gz)  hzip_run tar cfz "${output}" "$@";;
            *tar.zip) hzip_run tar cf  "${tar}" "$@"
                      rm -vf "${output}"
                      hzip_run 7z u -snl "${output}" "$tar"
                      rm -vf "${tar}";;
            *)        if ! which 7z >/dev/null 2>&1;then
                          echo "error: Please install 7z." >&2
                          return 1
                      fi
                      rm -vf "${output}"
                      hzip_run 7z u -snl "${output}" "$@";;
        esac
    fi
}
hzip_run() {
    test ! -n "${VERBOSE}" || echo "$*" >&2
    "$@"
}

## -------------------------------------------------------------------
if test @"$(basename "$0")" = @"hzip"; then
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0" ;;
        *)            hzip "$@"; exit 0;;
    esac
fi
