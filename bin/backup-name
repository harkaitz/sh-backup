#!/bin/sh -e
##:
#h: Usage: backup-name [-V][-D][-f SUFFIX] NAME|PATH [HOSTNAME]
#h:
#h: Select a name for a backup file. If "-D" is given a directory is
#h: selected and printed with the name. If "-f" is given the suffix is
#h: appended to the name.
#h:
#h: If you specify a full path, the name is the basename of the path.
#h:
#h: Directory selection order:
#h:
#h:   (1) "/media/$USER/BACKUPS/z".
#h:   (2) ~/BACKUPS (created if it does not exist).
#h:
#h: Environment variables: BACKUP_DIRECTORY, BACKUP_SUFFIX{1 (date), 2 (host)}
##:
backup_name() {
    local OPTIND optopt opt_D= opt_f=
    while getopts "VDf:" optopt; do
        case $optopt in
            V)  backup_name_show_variables; return 0;;
            D)  opt_D=y;;
            f)  opt_f="${OPTARG}";;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    if test ! -n "$1"; then
        echo "error: Please specify a name." >&2
        return 1
    fi
    local r="${opt_D:+${BACKUP_DIRECTORY}/}"
    local r="${r}$(basename "${1}")--${BACKUP_SUFFIX1}--${2:-${BACKUP_SUFFIX2}}"
    local r="${r}${opt_f}"
    echo "${r}" | tr ' ' '-'
}
backup_name_show_variables() {
    cat <<-EOF
	BACKUP_DIRECTORY : ${BACKUP_DIRECTORY}
	BACKUP_SUFFIX1   : ${BACKUP_SUFFIX1}
	BACKUP_SUFFIX2   : ${BACKUP_SUFFIX2}
	EOF
}
backup_name_calc_variables() {
    if test -n "${BACKUP_DIRECTORY}"; then
        true
    elif test -d "/media/$(whoami)/BACKUPS/z"; then
        BACKUP_DIRECTORY="/media/$(whoami)/BACKUPS/z"
    else
        mkdir -p "${HOME}/BACKUPS"
        BACKUP_DIRECTORY="${HOME}/BACKUPS"
    fi
    BACKUP_SUFFIX1="${BACKUP_SUFFIX1:-$(date +%Y-%m-%d-%H%M)}"
    BACKUP_SUFFIX2="${BACKUP_SUFFIX2:-$(uname -n)}"
}
## -------------------------------------------------------------------
backup_name_calc_variables
if test @"$(basename "$0")" = @"backup-name"; then
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0";;
        *)            backup_name "$@"; exit 0;;
    esac
fi
