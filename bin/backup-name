#!/bin/sh -e
##:
#h: Usage: backup-name [-VDf:] NAME|PATH [HOSTNAME]
#h:
#h: Search the backups directory, in order (1) and print a name
#h: for a backup file.
#h:
#h: The search order is:
#h:
#h:     (1) "/media/$USER/BACKUPS/z".
#h:     (2) ~/BACKUPS (created)
#h:
#h: Command line arguments:
#h:
#h:     -V        : Show honored environment variables.
#h:     -D        : Prefix with a directory name (1).
#h:     -f SUFFIX : The suffix for the backup, ie '.zip'.
##:
backup_name() {
    local OPTIND optopt opt_D= opt_f=
    while getopts "VDf:" optopt; do
        case $optopt in
            V)  backup_name_show_variables; return 0;;
            D)  opt_D=y;;
            f)  opt_f="${OPTARG}";;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    if test ! -n "$1"; then
        echo "error: Please specify a name." >&2
        return 1
    fi
    local r="${opt_D:+${BACKUP_DIRECTORY}/}"
    local r="${r}`basename ${1}`--${BACKUP_SUFFIX1}--${2:-${BACKUP_SUFFIX2}}"
    local r="${r}${opt_f}"
    echo "${r}" | tr ' ' '-'
}
backup_name_show_variables() {
    cat <<-EOF
	BACKUP_DIRECTORY : ${BACKUP_DIRECTORY}
	BACKUP_SUFFIX1   : ${BACKUP_SUFFIX1}
	BACKUP_SUFFIX2   : ${BACKUP_SUFFIX2}
	EOF
}
backup_name_calc_variables() {
    if test -n "${BACKUP_DIRECTORY}"; then
        true
    elif test -d "/media/`whoami`/BACKUPS/z"; then
        BACKUP_DIRECTORY="/media/`whoami`/BACKUPS/z"
    else
        mkdir -p "${HOME}/BACKUPS"
        BACKUP_DIRECTORY="${HOME}/BACKUPS"
    fi
    BACKUP_SUFFIX1="${BACKUP_SUFFIX1:-`date +%Y-%m-%d-%H%M`}"
    BACKUP_SUFFIX2="${BACKUP_SUFFIX2:-`uname -n`}"
}
## -----------------------------------------------------------------------------
backup_name_calc_variables
if test @"$(basename "$0")" = @"backup-name"; then
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0";;
        *)            backup_name "$@"; exit 0;;
    esac
fi
